@startuml

interface BaseClient {
    - _id: ObjectId
    + name: Name
    + phone: Phone
    + email: Email
    + thumbnail: Thumbnail
    + notes: Note[]
    + getId()
    + setId()
}

interface BaseUser extends BaseClient {
    + password: Password
    + role: Role
}

class User implements BaseUser {
    + registerUserCookies(c: Context): boolean
    + registerUser(): User
    + signUser(): string
}

class Supplier implements BaseUser {
    + link: Link
    + description: Description
}

' :: TINY OBJECTS ::

class Password {
    - password: string
    - encrypt(password: string): Promise<string>
    + set(password: string)
    + validate(password: string): Promise<string>
}

class Role {
    - role: Map<string, number>
    + set(role: Map<string, number>)
    + get()
    + getOne(name)
}

class Name {
    - names: string[]
    - alias: string
    + get(): string
    + getOne(i): string
    + getAlias(): string
    + set(fullName): string
    + setAlias(alias): string
}

class Phone {
    - country: string
    - number: string
    - save(phone: Phone)
    - check(phone: Phone)
    + get()
    + set(phone: Phone)
}

class Email {
    - email
    - save(email: Email)
    - check(email: Email)
    + get()
    + set(email: Email)
}

class Description {
    - body: string
    - timestamp: Date
    - save(description: Description)
    - check(description: Description)
    + get()
    + set(description: Description)
}

class Thumbnail {
    - link: string
    - timestamp: Date
    - save(thumbnail: Thumbnail)
    - check(thumbnail: Thumbnail)
    + get()
    + set(thumbnail: Thumbnail)
}

class Note {
    - tags: string
    - body: string
    - timestamp: Date
    - save(email: Email)
    - check(email: Email)
    + get()
    + set(email: Email)
}

class Link {
    - link
    + get()
    + set(link: string)
}

' Composition
BaseClient *--> Name
BaseClient *--> Phone
BaseClient *--> Email
BaseClient *--> Thumbnail
BaseClient *--> Note
Supplier *..> Link
Supplier *..> Description
BaseUser *--> Password
BaseUser *--> Role

' Notes
note left of BaseUser 
setRole() will only create a new item in
role[], just if doesn't exist already
endnote

@enduml